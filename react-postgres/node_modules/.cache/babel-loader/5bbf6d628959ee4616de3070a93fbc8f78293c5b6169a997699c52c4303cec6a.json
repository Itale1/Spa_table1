{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\Projects\\\\Spa_table1\\\\react-postgres\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TableHead from \"./TableHead\";\nimport Skeleton from \"./Skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [spatable, setSpatable] = useState();\n  useEffect(() => {\n    getSpatable();\n  }, []);\n  function getSpatable() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setSpatable(data);\n    });\n  }\n  console.log(typeof {\n    spatable\n  });\n  //  const data = Object.entries({spatable});\n  // ключи объекта преобразуем в массив (ES6)\n  Object.keys({\n    spatable\n  });\n\n  // значения объекта преобразуем в массив (ES8)\n  Object.values({\n    spatable\n  });\n  console.log(typeof {\n    spatable\n  });\n  //  console.log(typeof(data));\n  //  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [spatable, /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quanity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 15\n  }, this);\n}\n_s(Table, \"h6y0HJbjIAzXJlGZxsS/BF6uuZA=\");\n_c = Table;\nexport default Table;\n\n// export default function App() {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [name, setName] = useState(\"\");\n//   const [users, setUsers] = useState([]);\n\n//   const onSubmitForm = async(e)=>{\n//     e.preventDefault()\n//     try{\n//       const response = await fetch(`http//:localhost:3000/users/?name=${name}`);\n//       const parseResponse = await response.json();\n//       setUsers(parseResponse);\n\n//     }catch(err){\n//       console.error(err.message);\n//     }\n\n//   }\n\n//   const currentTableData = useMemo(() => {\n//     const firstPageIndex = (currentPage - 1) * PageSize;\n//     const lastPageIndex = firstPageIndex + PageSize;\n//     return users.slice(firstPageIndex, lastPageIndex);\n//   }, [currentPage]);\n\n//   return (\n//     <>\n\n//     <div className=\"top\">\n//       <h3>Data Table</h3>\n//       <form onSubmit={onSubmitForm}>\n//       <input type=\"text\" Placeholder=\"Search..\" className=\"Search\" value={name} onChange={(e) =>setName(e.target.value)}/>\n//       <button>Submit</button>\n//       </form>\n\n//     </div>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Id</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email Address</th>\n//             <th>Gender</th>\n//           </tr>\n\n//         </thead>\n//         <tbody>\n//               //displaying data\n//           {currentTableData(users).map(user => {\n//             return (\n//               <tr>\n//                 <td>{user.id}</td>\n//                 <td>{user.first_name}</td>\n//                 <td>{user.last_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//       </table>\n//       {users.length === 0 && <p> No Results Found!!</p>}\n//       <Pagination\n//         className=\"pagination-bar\"\n//         currentPage={currentPage}\n//         totalCount={users.length}\n//         pageSize={PageSize}\n//         onPageChange={page => setCurrentPage(page)}\n//       />\n//     </>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useEffect","useState","TableHead","Skeleton","jsxDEV","_jsxDEV","Table","_s","spatable","setSpatable","getSpatable","fetch","then","response","text","data","console","log","Object","keys","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/работа/Projects/Spa_table1/react-postgres/src/components/Table.js"],"sourcesContent":["\r\nimport {useEffect, useState} from \"react\";\r\n\r\nimport TableHead from \"./TableHead\";\r\nimport Skeleton from \"./Skeleton\";\r\n\r\n\r\n \r\nfunction Table() {\r\n  \r\n  const [spatable, setSpatable] = useState();\r\n  useEffect(() => {\r\n    getSpatable();\r\n  }, []);\r\n  function getSpatable() {\r\n    fetch('http://localhost:3001')\r\n      .then(response => {\r\n        return response.text();\r\n      })\r\n      .then(data => {\r\n        setSpatable(data);\r\n        \r\n      });\r\n     \r\n  }\r\n  console.log(typeof({spatable}));\r\n  //  const data = Object.entries({spatable});\r\n  // ключи объекта преобразуем в массив (ES6)\r\nObject.keys({spatable});\r\n\r\n// значения объекта преобразуем в массив (ES8)\r\nObject.values({spatable});\r\nconsole.log(typeof{spatable});\r\n  //  console.log(typeof(data));\r\n  //  console.log(data);\r\n    return (\r\n      \r\n              <div className=\"Table\">\r\n                \r\n  {spatable}\r\n<table>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Name</th>\r\n          <th>Quanity</th>\r\n          <th>Distance</th>\r\n        </tr>\r\n        {/* {data.map((val, key) => {\r\n          return (\r\n            <tr key={key}>\r\n              <td>{val.date}</td>\r\n              <td>{val.name}</td>\r\n              <td>{val.quanity}</td>\r\n              <td>{val.distance}</td>\r\n            </tr>\r\n          )\r\n        })} */}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\n export default Table;\r\n\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [name, setName] = useState(\"\");\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   const onSubmitForm = async(e)=>{\r\n//     e.preventDefault()\r\n//     try{\r\n//       const response = await fetch(`http//:localhost:3000/users/?name=${name}`);\r\n//       const parseResponse = await response.json();\r\n//       setUsers(parseResponse);\r\n\r\n//     }catch(err){\r\n//       console.error(err.message);\r\n//     }\r\n\r\n//   }\r\n\r\n//   const currentTableData = useMemo(() => {\r\n//     const firstPageIndex = (currentPage - 1) * PageSize;\r\n//     const lastPageIndex = firstPageIndex + PageSize;\r\n//     return users.slice(firstPageIndex, lastPageIndex);\r\n//   }, [currentPage]);\r\n\r\n//   return (\r\n//     <>\r\n\r\n//     <div className=\"top\">\r\n//       <h3>Data Table</h3>\r\n//       <form onSubmit={onSubmitForm}>\r\n//       <input type=\"text\" Placeholder=\"Search..\" className=\"Search\" value={name} onChange={(e) =>setName(e.target.value)}/>\r\n//       <button>Submit</button>\r\n//       </form>\r\n      \r\n//     </div>\r\n\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Id</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email Address</th>\r\n//             <th>Gender</th>\r\n//           </tr>\r\n\r\n//         </thead>\r\n//         <tbody>\r\n//               //displaying data\r\n//           {currentTableData(users).map(user => {\r\n//             return (\r\n//               <tr>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.first_name}</td>\r\n//                 <td>{user.last_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//       </table>\r\n//       {users.length === 0 && <p> No Results Found!!</p>}\r\n//       <Pagination\r\n//         className=\"pagination-bar\"\r\n//         currentPage={currentPage}\r\n//         totalCount={users.length}\r\n//         pageSize={PageSize}\r\n//         onPageChange={page => setCurrentPage(page)}\r\n//       />\r\n//     </>\r\n//   );\r\n// }"],"mappings":";;AACA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,SAASA,WAAWA,CAAA,EAAG;IACrBC,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACZN,WAAW,CAACM,IAAI,CAAC;IAEnB,CAAC,CAAC;EAEN;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO;IAACT;EAAQ,CAAE,CAAC;EAC/B;EACA;EACFU,MAAM,CAACC,IAAI,CAAC;IAACX;EAAQ,CAAC,CAAC;;EAEvB;EACAU,MAAM,CAACE,MAAM,CAAC;IAACZ;EAAQ,CAAC,CAAC;EACzBQ,OAAO,CAACC,GAAG,CAAC,OAAM;IAACT;EAAQ,CAAC,CAAC;EAC3B;EACA;EACE,oBAEUH,OAAA;IAAKgB,SAAS,EAAC,OAAO;IAAAC,QAAA,GAEjCd,QAAQ,eACXH,OAAA;MAAAiB,QAAA,eACQjB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbrB,OAAA;UAAAiB,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbrB,OAAA;UAAAiB,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBrB,OAAA;UAAAiB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACnB,EAAA,CApDQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAuDb,eAAeA,KAAK;;AAKrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}