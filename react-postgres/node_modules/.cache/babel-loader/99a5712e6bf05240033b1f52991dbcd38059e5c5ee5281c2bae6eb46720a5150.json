{"ast":null,"code":"const Pool = require('pg').Pool;\nconst pool = new Pool({\n  user: 'postgres',\n  host: 'localhost',\n  database: 'postgres',\n  password: '1qasdfghj',\n  port: 5432\n});\nconst getSpatable = () => {\n  return new Promise(function (resolve, reject) {\n    pool.query('SELECT * FROM Spatable ORDER BY date ASC', (error, results) => {\n      if (error) {\n        reject(error);\n      }\n      resolve(results.rows);\n    });\n  });\n};\nmodule.exports = {\n  getSpatable\n};","map":{"version":3,"names":["Pool","require","pool","user","host","database","password","port","getSpatable","Promise","resolve","reject","query","error","results","rows","module","exports"],"sources":["D:/работа/Projects/Spa_table1/react-postgres/src/components/spatable_model.js"],"sourcesContent":["\r\nconst Pool = require('pg').Pool\r\n\r\n\r\nconst pool = new Pool({\r\n  user: 'postgres',\r\n  host: 'localhost',\r\n  database: 'postgres',\r\n  password: '1qasdfghj',\r\n  port: 5432,\r\n});\r\n\r\nconst getSpatable = () => {\r\n  return new Promise(function(resolve, reject) {\r\n    pool.query('SELECT * FROM Spatable ORDER BY date ASC', (error, results) => {\r\n      if (error) {\r\n        reject(error)\r\n      }\r\n      resolve(results.rows);\r\n    })\r\n  }) \r\n}\r\n\r\n\r\nmodule.exports = {\r\n  getSpatable,\r\n\r\n}"],"mappings":"AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,IAAI,CAAC,CAACD,IAAI;AAG/B,MAAME,IAAI,GAAG,IAAIF,IAAI,CAAC;EACpBG,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,WAAW;EACrBC,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,OAAO,IAAIC,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IAC3CT,IAAI,CAACU,KAAK,CAAC,0CAA0C,EAAE,CAACC,KAAK,EAAEC,OAAO,KAAK;MACzE,IAAID,KAAK,EAAE;QACTF,MAAM,CAACE,KAAK,CAAC;MACf;MACAH,OAAO,CAACI,OAAO,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAGDC,MAAM,CAACC,OAAO,GAAG;EACfT;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}