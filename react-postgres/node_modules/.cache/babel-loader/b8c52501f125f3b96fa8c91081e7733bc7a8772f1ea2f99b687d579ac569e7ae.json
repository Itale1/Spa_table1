{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\Projects\\\\Spa_table1\\\\react-postgres\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [spatable, setSpatable] = useState(false);\n  useEffect(() => {\n    getSpatable();\n  }, []);\n  function getSpatable() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setSpatable(data);\n    });\n  }\n  console.log(typeof {\n    spatable\n  });\n  // const data = Object.entries({spatable});\n  const data = Object.entries(spatable);\n  console.log(typeof {\n    spatable\n  });\n  // ключи объекта преобразуем в массив (ES6)\n  Object.keys({\n    spatable\n  });\n  console.log(typeof {\n    spatable\n  });\n  // значения объекта преобразуем в массив (ES8)\n  Object.values({\n    spatable\n  });\n  console.log(typeof {\n    spatable\n  });\n  console.log(typeof data);\n  console.log(data);\n  console.log(getSpatable);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [spatable, /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quanity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.quanity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.distance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 15\n  }, this);\n}\n_s(Table, \"DCfvi4LfEqJ7rD2IUQ+W1CWTolY=\");\n_c = Table;\nexport default Table;\n\n//  import {useEffect, useState} from \"react\";\n\n//  import './App.css';\n\n// function Table() {\n\n//   const [spatable, setSpatable] = useState();\n//   useEffect(() => {\n//     getSpatable();\n//   }, []);\n//   function getSpatable() {\n//     fetch('http://localhost:3002')\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         setSpatable(data);\n\n//       });\n\n//   }\n\n//    return (\n\n//                     <div className=\"Table\">\n\n//       <table>\n//       {spatable}\n\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Name</th>\n//                 <th>Quanity</th>\n//                 <th>Distance</th>\n//                </tr>\n/* {spatable.map((val, key) => {\r\n  return (\r\n    <tr key={key}>\r\n      <td>{val.date}</td>\r\n      <td>{val.name}</td>\r\n      <td>{val.quanity}</td>\r\n      <td>{val.distance}</td>\r\n    </tr>\r\n  )\r\n})} */\n//     </table>\n//   </div>\n// );\n//     }\n//     export default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Table","_s","spatable","setSpatable","getSpatable","fetch","then","response","text","data","console","log","Object","entries","keys","values","children","fileName","_jsxFileName","lineNumber","columnNumber","map","val","key","date","name","quanity","distance","_c","$RefreshReg$"],"sources":["D:/работа/Projects/Spa_table1/react-postgres/src/components/Table.js"],"sourcesContent":["\r\nimport {useEffect, useState} from \"react\";\r\n\r\n \r\nfunction Table() {\r\n  \r\n  const [spatable, setSpatable] = useState(false);\r\n  useEffect(() => {\r\n    getSpatable();\r\n  }, []);\r\n  function getSpatable() {\r\n    fetch('http://localhost:3001')\r\n      .then(response => {\r\n        return response.text();\r\n      })\r\n      .then(data => {\r\n        setSpatable(data);\r\n        \r\n      });\r\n     \r\n  }\r\n  console.log(typeof({spatable}));\r\n  // const data = Object.entries({spatable});\r\n  const data = Object.entries(spatable);\r\n  console.log(typeof({spatable}));\r\n  // ключи объекта преобразуем в массив (ES6)\r\nObject.keys({spatable});\r\nconsole.log(typeof({spatable}));\r\n// значения объекта преобразуем в массив (ES8)\r\nObject.values({spatable});\r\nconsole.log(typeof{spatable});\r\n   console.log(typeof(data));\r\n   console.log(data);\r\n   console.log(getSpatable);\r\n    return (\r\n      \r\n              <div >\r\n                \r\n  {spatable}\r\n\r\n    \r\n          <table>\r\n          <thead>\r\n             <tr>\r\n            <th>Date</th>\r\n            <th>Name</th>\r\n            <th>Quanity</th>\r\n            <th>Distance</th>\r\n             </tr>\r\n          </thead>\r\n          <tbody>\r\n          { data.map((val, key) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <td>{val.date}</td>\r\n                    <td>{val.name}</td>\r\n                    <td>{val.quanity}</td>\r\n                    <td>{val.distance}</td>\r\n                  </tr>\r\n                              );\r\n                            })}  \r\n            </tbody>\r\n          {/* <tbody>\r\n                //displaying data\r\n            {currentTableData(users).map(user => {\r\n              return (\r\n                <tr>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.first_name}</td>\r\n                  <td>{user.last_name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.gender}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody> */}\r\n        </table>\r\n        </div>\r\n  );\r\n}\r\n  \r\n\r\n export default Table; \r\n\r\n\r\n\r\n\r\n//  import {useEffect, useState} from \"react\";\r\n\r\n//  import './App.css';\r\n \r\n \r\n// function Table() {\r\n  \r\n//   const [spatable, setSpatable] = useState();\r\n//   useEffect(() => {\r\n//     getSpatable();\r\n//   }, []);\r\n//   function getSpatable() {\r\n//     fetch('http://localhost:3002')\r\n//       .then(response => {\r\n//         return response.text();\r\n//       })\r\n//       .then(data => {\r\n//         setSpatable(data);\r\n        \r\n//       });\r\n     \r\n//   }\r\n\r\n \r\n//    return (\r\n\r\n//                     <div className=\"Table\">\r\n                      \r\n//       <table>\r\n//       {spatable}\r\n        \r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Name</th>\r\n//                 <th>Quanity</th>\r\n//                 <th>Distance</th>\r\n//                </tr>\r\n              /* {spatable.map((val, key) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <td>{val.date}</td>\r\n                    <td>{val.name}</td>\r\n                    <td>{val.quanity}</td>\r\n                    <td>{val.distance}</td>\r\n                  </tr>\r\n                )\r\n              })} */\r\n        //     </table>\r\n        //   </div>\r\n        // );\r\n        //     }\r\n        //     export default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}